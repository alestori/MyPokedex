{"version":3,"sources":["components/Header.jsx","components/Type.jsx","components/PokemonCard.jsx","components/Input.jsx","components/Button.jsx","pokeFetch.jsx","components/Form.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Component","Type","type","this","props","PokemonCard","name","weight","sprites","types","typeObj","Object","values","map","i","src","alt","Input","inputLabel","onChange","labelClassName","Button","pokeFetch","a","poke","fetch","response","json","pokemon","Form","state","error","errormsg","id","front_default","species","0","handleInput","e","value","target","setState","toLowerCase","logValue","push","onTrigger","preventDefault","parentCallback","onSubmit","data-testid","App","handleCallback","data","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f27c4a6c.chunk.js","sourcesContent":["import React, { Component } from 'react';\n// import SearchForm from './SearchForm';\n\nexport class Header extends Component {\n  render() {\n    return (\n      <header className=\"App-header\">\n        <h1 className=\"page-title\">Pokédex</h1>\n      </header>\n    )\n  }\n}\n\nexport default Header\n","import React, { Component } from 'react';\n\nexport class Type extends Component {\n  render() {\n    const {type} = this.props;\n    return (\n      <p>{type}</p>\n    )\n  }\n}\n\nexport default Type\n","import React, { Component } from 'react';\nimport Type from './Type';\n\nexport class PokemonCard extends Component {\n  render() {\n    const {name, weight, sprites, className, types } = this.props;\n    const typeObj = Object.values(types);\n    return (\n      <div className={`${className} poke-card`}>\n        <h2 className=\"poke-name\">{name}</h2>\n        <div className=\"poke-info\">\n          <div>\n            <div className=\"poke-sub-info\">\n              <label className=\"info-label\">Type:</label>\n              {typeObj.map((type, i) => <Type key={i} type={type.type.name} />)}\n            </div>\n            <div className=\"poke-sub-info\">\n              <label className=\"info-label\">Weight:</label>\n              <p className=\"poke-weight\">{weight}lb</p>\n            </div>\n          </div>\n          <img className=\"poke-sprite\" src={sprites} alt=\"sprite\" />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default PokemonCard;\n","import React, { Component } from 'react'\n\nexport class Input extends Component {\n  render() {\n    const { inputLabel, className, name, onChange, labelClassName } = this.props;\n    return (\n      <label className={labelClassName}>\n        {inputLabel}\n        <input\n          className={className}\n          name={name}\n          onChange={onChange}\n        />\n      </label>\n    )\n  }\n}\n\nexport default Input\n","import React, { Component } from 'react'\n\nexport class Button extends Component {\n  render() {\n    const { className, name, type } = this.props;\n    return (\n      <button\n        type={type} \n        className={className}\n        >{name}\n      </button>\n    )\n  }\n}\n\nexport default Button\n","export const pokeFetch = async (poke = \"ditto\") => {\n  try {\n    const response = await fetch(`https://pokeapi.co/api/v2/pokemon/${poke}`);\n    const pokemon = await response.json();\n    return await pokemon;\n  } catch (e) {\n    return;\n  }\n}\n\nexport default pokeFetch;","import React, { Component } from 'react';\nimport Input from './Input';\nimport Button from './Button';\nimport pokeFetch from '../pokeFetch';\n\nexport class Form extends Component {\n  state = {\n    error: {\n      error: [],\n      errormsg: '',\n    },\n    id: 132,\n    name: 'ditto',\n    weight: 40,\n    front_default: 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/132.png',\n    species: {\n      name: 'ditto',\n    },\n    types: {\n      0: {\n        type: {\n          name: 'normal',\n        }\n      },\n    }\n  }\n\n  handleInput = (e) => {\n    const value = e.target.value;\n    this.setState({\n      name: value.toLowerCase(),\n    });\n  }\n\n  logValue = async () => {\n    try {\n      const pokemon = await pokeFetch(this.state.name);\n      const {id, name, weight, sprites, species, types } = pokemon;\n      const { front_default } = sprites;\n      this.setState({id, name, weight, front_default, species, types, \n        error: { \n          error: [],\n          errormsg: \"\",\n        }\n      });\n    } catch (e) {\n      const pokemon = await pokeFetch('ditto');\n      const {id, name, weight, species, types, sprites} = pokemon;\n      const {front_default } = sprites;\n      this.setState({id, name, weight, front_default, species, types,\n        error: {\n          error: [].push(e),\n          errormsg: \"Couldn't find that Pokémon. But here's one that could be it...maybe?\"\n        }\n      })\n    }\n  }\n\n  onTrigger = async (e) => {\n    e.preventDefault();\n    await this.logValue();\n    this.props.parentCallback(this.state);\n  }\n\n  render() {\n    const { className } = this.props;\n    return (\n      <form onSubmit={this.onTrigger} className={className} data-testid={this.props['data-testid']}>\n       <Input\n          labelClassName=\"input-label\"\n          onChange={this.handleInput} \n          className=\"search-input\" \n          name=\"inputform\"\n          inputLabel=\"Pokémon\" />\n        <Button type=\"submit\" className=\"search-btn\" name=\"Search\"/>\n        { this.state.error.errormsg && <p className=\"error\">{ this.state.error.errormsg }</p> }\n      </form>\n    )\n  }\n}\n\nexport default Form;\n","import React, { Component } from 'react'\nimport Header from './components/Header';\nimport PokemonCard from './components/PokemonCard';\nimport Form from './components/Form';\nimport './App.css';\n\nexport class App extends Component {\n  state = {\n    id: 132,\n    name: 'ditto',\n    weight: 40,\n    front_default: 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/132.png',\n    species: {\n      name: 'ditto',\n    },\n    types: {\n      0: {\n        type: {\n          name: 'normal',\n      }\n      },\n    }\n  }\n\n  handleCallback = (data) => {\n    this.setState({\n      id: data.id,\n      name: data.name,\n      weight: data.weight,\n      front_default: data.front_default,\n      species: data.species,\n      types: data.types,\n    })\n  }\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Form \n          data-testid=\"form-test\"\n          className=\"search-form\"\n          parentCallback={this.handleCallback} />\n        <PokemonCard \n          id={this.state.id}\n          className={`${this.state.name}`} \n          name={this.state.species.name} \n          weight={this.state.weight} \n          sprites={this.state.front_default} \n          types={this.state.types}\n        />\n      </div> \n    )\n  }\n}\n\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}